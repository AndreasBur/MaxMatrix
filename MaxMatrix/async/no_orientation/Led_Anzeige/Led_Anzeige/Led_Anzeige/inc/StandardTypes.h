/******************************************************************************************************************************************************
 *  COPYRIGHT
 *  ---------------------------------------------------------------------------------------------------------------------------------------------------
 *  \verbatim
 *  Copyright (c) Andreas Burnickl                                                                                                 All rights reserved.
 *
 *  \endverbatim
 *  ---------------------------------------------------------------------------------------------------------------------------------------------------
 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------------------------------------*/
/**     \file       StandardTypes.h
 *      \brief      Main header file of standard types library
 *
 *      \details    Library with standard types
 *                  
 *
 *****************************************************************************************************************************************************/
#ifndef _STANDARD_TYPES_H_
#define _STANDARD_TYPES_H_

/******************************************************************************************************************************************************
 * INCLUDES
 *****************************************************************************************************************************************************/


/******************************************************************************************************************************************************
 *  LOCAL CONSTANT MACROS
 *****************************************************************************************************************************************************/
 /* standard type for configuration */
#define STD_ON					1u
#define STD_OFF					0u

#define STD_NULL_CHARACTER		'\0'


/******************************************************************************************************************************************************
 *  LOCAL FUNCTION MACROS
 *****************************************************************************************************************************************************/
#define writeBit(Var, Bit, Value) \
(Var = (Var & ~(1 << Bit)) | (Value << Bit))

/* read Bit Group */
#define readBitGroup(Var, BitGroupMask, BitGroupPosition) \
(Var = ((Var & ((uint8_t)BitGroupMask)) >> BitGroupPosition))

/* write Bit Group */
#define writeBitGroup(Var, BitGroupMask, BitGroupPosition, Value) \
(Var = ((Var & ~((uint8_t)BitGroupMask)) | ((Value << BitGroupPosition) & ((uint8_t)BitGroupMask))))


/******************************************************************************************************************************************************
 *  GLOBAL DATA TYPES AND STRUCTURES
 *****************************************************************************************************************************************************/
  /* standard return type for functions */
typedef enum {
    E_OK = 0,
    E_NOT_OK = 1
} stdReturnType;

#endif

/******************************************************************************************************************************************************
 *  E N D   O F   F I L E
 *****************************************************************************************************************************************************/